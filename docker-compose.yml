version: '3.9'
services:
  postgres-pedidos:
    image: postgres:14
    container_name: postgres-pedidos
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mcP4ss
      POSTGRES_DB: pedidos
    ports:
      - "5432:5432"
    volumes:
      - postgres-pedidos-data:/var/lib/postgresql/data

  postgres-usuarios:
    image: postgres:14
    container_name: postgres-usuarios
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mcP4ss
      POSTGRES_DB: usuarios
    ports:
      - "5433:5432"
    volumes:
      - postgres-usuarios-data:/var/lib/postgresql/data

  mongodb:
    image: mongo:8.0
    container_name: mongo-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mcP4ss
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  pedidos-service:
    build: ./pedidos-service
    container_name: pedidos-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres-pedidos
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-pedidos:5432/pedidos
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: mcP4ss
      SPRING_PROFILES_ACTIVE: docker

  usuarios-service:
    build: ./usuarios-service
    container_name: usuarios-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-usuarios
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-usuarios:5432/usuarios
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: mcP4ss
      SPRING_PROFILES_ACTIVE: docker

  inventario-service:
    build: ./inventario-service
    container_name: inventario-service
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://inventario:mcP4ss@mongo-db:27017/inventario

volumes:
  postgres-pedidos-data:
    driver: local
  postgres-usuarios-data:
    driver: local
  mongo-data:
    driver: local
